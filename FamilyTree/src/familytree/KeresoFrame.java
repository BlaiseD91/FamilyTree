/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package familytree;

import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author szeke
 */
public class KeresoFrame extends javax.swing.JFrame {

    private ArrayList<Szemely> talalatiLista = new ArrayList<>();
    /**
     * Creates new form Adatmodositas
     */
    public KeresoFrame() {
        initComponents();
    }
    
    private ArrayList<Szemely> keres(){
        ArrayList<Szemely> result = new ArrayList<>();
        
        String keresoSzoveg = keresoMezo.getText();
        result = FamilyTreeFrame.dh.nevSzamKereso(keresoSzoveg);
        return result;
    }
    
    private DefaultListModel<String> showList(ArrayList<Szemely> szemelyek){
        DefaultListModel<String> model = new DefaultListModel<>();
        for (Szemely szemely : szemelyek) {
                model.addElement(szemely.getSzemelyiSzam() + " " + szemely.getNev());
        }
        return model;
    }
    
    private void modositoFrameLetrehozas(){
        if(talalatiLista.size() > 0){
            String kivalasztott = jList1.getSelectedValue().split(" ", 2)[0];
            Szemely sz = FamilyTreeFrame.dh.szemelyLekerdezes(kivalasztott);

            ModositasFrame modosit = new ModositasFrame(sz);
            modosit.setVisible(true);
        }
    }
    private void lekerdezoFrameLetrehozas(){
        if(talalatiLista.size() > 0){
            String kivalasztott = jList1.getSelectedValue().split(" ", 2)[0];
            Szemely sz = FamilyTreeFrame.dh.szemelyLekerdezes(kivalasztott);

            LekerdezesFrame leker = new LekerdezesFrame(sz);
            leker.setVisible(true);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        keresoMezo = new javax.swing.JTextField();
        keresGomb = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        modositGomb = new javax.swing.JButton();
        lekerGomb = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Keresõ");
        setLocation(new java.awt.Point(1000, 300));
        setResizable(false);

        keresoMezo.setToolTipText("Adj meg nevet vagy személyi számot");

        keresGomb.setText("Keres");
        keresGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keresGombActionPerformed(evt);
            }
        });

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setToolTipText("");
        jScrollPane1.setViewportView(jList1);

        modositGomb.setBackground(new java.awt.Color(204, 204, 0));
        modositGomb.setText("Adatmódosítás");
        modositGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modositGombActionPerformed(evt);
            }
        });

        lekerGomb.setBackground(new java.awt.Color(0, 204, 255));
        lekerGomb.setText("Lekérdezés");
        lekerGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lekerGombActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(modositGomb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lekerGomb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(keresoMezo, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(keresGomb)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keresoMezo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keresGomb))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(lekerGomb)
                        .addGap(18, 18, 18)
                        .addComponent(modositGomb)))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void modositGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modositGombActionPerformed
        modositoFrameLetrehozas();
    }//GEN-LAST:event_modositGombActionPerformed

    private void lekerGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lekerGombActionPerformed
        lekerdezoFrameLetrehozas();
    }//GEN-LAST:event_lekerGombActionPerformed

    private void keresGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keresGombActionPerformed
        this.talalatiLista = keres();
        jList1.setModel(showList(talalatiLista));
        
    }//GEN-LAST:event_keresGombActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KeresoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KeresoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KeresoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KeresoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KeresoFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton keresGomb;
    private javax.swing.JTextField keresoMezo;
    private javax.swing.JButton lekerGomb;
    private javax.swing.JButton modositGomb;
    // End of variables declaration//GEN-END:variables
}
